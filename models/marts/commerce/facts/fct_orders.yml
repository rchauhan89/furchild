version: 2

models:
  - name: fct_orders
    description: "Order-level facts aggregated from fct_order_items; minimal tests to unblock CI."
    columns:
      - name: order_sk
        tests:
          - not_null
          - unique
      - name: order_id
        tests:
<<<<<<< HEAD
          - dbt_utils.expression_is_true:
              arguments:
                expression: "item_count >= 0::number(38,6)"
      - name: distinct_products
        description: "Number of distinct products in the order."
        tests:
          - dbt_utils.expression_is_true:
              arguments:
                expression: "distinct_products >= 0::number(38,6)"
      - name: order_gross
        description: "Sum of line_gross across items (pre-discount, pre-tax)."
        tests:
          - dbt_utils.expression_is_true:
              arguments:
                expression: "order_gross >= 0::number(38,6)"
      - name: order_discount_amt
        description: "Total discount applied at line level."
        tests:
          - dbt_utils.expression_is_true:
              arguments:
                expression: "order_discount_amt >= 0::number(38,6)"
      - name: order_net_before_tax
        description: "Gross - discount, before tax."
        tests:
          - dbt_utils.expression_is_true:
              arguments:
                expression: "order_net_before_tax >= 0::number(38,6)"
      - name: order_tax_amt
        description: "Total tax amount for the order."
        tests:
          - dbt_utils.expression_is_true:
              arguments:
                expression: "order_tax_amt >= 0::number(38,6)"
      - name: order_net_amt
        description: "Final net amount (gross - discount + tax)."
        tests:
          - dbt_utils.expression_is_true:
              arguments:
                expression: "order_net_amt >= 0::number(38,6)"
      - name: order_discount_pct_effective
        description: "Effective discount percentage at order level (0-100)."
        tests:
          - dbt_utils.expression_is_true:
              arguments:
                expression: "order_discount_pct_effective between 0::number(38,6) and 100::number(38,6)"
      - name: order_vat_pct_effective
        description: "Effective VAT percentage derived from tax / net_before_tax (0-100)."
        tests:
          - dbt_utils.expression_is_true:
              arguments:
                expression: "order_vat_pct_effective between 0::number(38,6) and 100::number(38,6)"
      - name: vat_pct_src
        description: "VAT % recorded in the source orders table (may differ from effective)."

      - name: _calculated_at
        description: "Audit column â€” when the order facts were calculated."

    tests:
      # Soft accounting identity checks (warn level)
      - dbt_utils.expression_is_true:
          config:
            severity: warn
          arguments:
            expression: "abs(order_net_before_tax - round(order_gross - order_discount_amt, 2)) <= 0.01::number(38,6)"
      - dbt_utils.expression_is_true:
          config:
            severity: warn
          arguments:
            expression: "abs(order_net_amt - round(order_net_before_tax + order_tax_amt, 2)) <= 0.01::number(38,6)"
=======
          - not_null
>>>>>>> 52ef72a0e0b16835d2d4fb384e6fecfed55bb3bc
