version: 2

models:
  - name: fct_order_items
    description: "One row per order item (order_id × product_id × order_item_id). Prices, discounts, VAT computed at line level."
    columns:
      - name: order_item_sk
        tests: [not_null, unique]

      - name: order_id
        tests: [not_null]

      - name: product_id
        tests: [not_null]

      - name: quantity
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: "quantity >= 0::number(38,6)"

      - name: unit_price
        tests:
          - dbt_utils.expression_is_true:
              expression: "unit_price >= 0::number(38,6)"

      - name: line_net_amt
        tests:
          - dbt_utils.expression_is_true:
              expression: "line_net_amt >= 0::number(38,6)"

      - name: line_gross
        tests:
          - dbt_utils.expression_is_true:
              expression: "line_gross >= 0::number(38,6)"

      - name: line_discount_amt
        tests:
          - dbt_utils.expression_is_true:
              expression: "line_discount_amt >= 0::number(38,6)"

      - name: line_tax_amt
        tests:
          - dbt_utils.expression_is_true:
              expression: "line_tax_amt >= 0::number(38,6)"

      - name: discount_pct_effective
        tests:
          - dbt_utils.expression_is_true:
              expression: "discount_pct_effective between 0::number(38,6) and 100::number(38,6)"

      - name: vat_pct
        tests:
          - dbt_utils.expression_is_true:
              expression: "vat_pct between 0::number(38,6) and 100::number(38,6)"

    tests:
      # Warn if provided raw line amount deviates >1 AED from computed net-before-tax
      - dbt_utils.expression_is_true:
          expression: "abs(coalesce(line_amount_raw, 0::number(38,6)) - coalesce(line_gross - line_discount_amt, 0::number(38,6))) <= 1::number(38,6)"
          severity: warn

      # Soft checks (warn) to catch drift without failing builds

      # 1) line_gross ≈ quantity * unit_price (to 0.01 tolerance)
      - dbt_utils.expression_is_true:
          expression: "abs(line_gross - round(quantity * unit_price, 2)) <= 0.01::number(38,6)"
          severity: warn

      # 2) Accounting identity: net = gross - discount + tax (to 0.01 tolerance)
      - dbt_utils.expression_is_true:
          expression: "abs(line_net_amt - round(line_gross - line_discount_amt + line_tax_amt, 2)) <= 0.01::number(38,6)"
          severity: warn

      # 3) No negative totals anywhere
      - dbt_utils.expression_is_true:
          expression: "least(line_gross, line_discount_amt, line_tax_amt, line_net_amt) >= 0::number(38,6)"
          severity: warn
